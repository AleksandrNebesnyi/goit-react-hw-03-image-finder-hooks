{"version":3,"sources":["component/Container/Container.styled.js","component/Container/Container.jsx","component/Searchbar/Searchbar.styled.js","component/Searchbar/Searchbar.jsx","api/pixabay-api.jsx","component/ImageGalleryItem/ImageGalleryItem.styled.js","component/ImageGalleryItem/ImageGalleryItem.jsx","component/ImageGallery/ImageGalery.styled.js","component/ImageGallery/ImageGalery.jsx","component/Modal/Modal.styled.js","component/Modal/Modal.jsx","component/Loader/Loader.styled.js","component/Loader/Loader.jsx","component/Button/Button.styled.js","component/Button/Button.jsx","component/ErrorMessage/ErrorMasage.jsx","App.js","index.js"],"names":["MainContainer","styled","div","Container","children","Header","header","Form","form","Button","button","ButtonLabel","span","Input","input","Searchbar","onSubmit","useState","searchQuery","setSearchQuery","event","preventDefault","trim","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","type","Provider","value","color","size","autocomplete","autoFocus","placeholder","name","onChange","currentTarget","toLowerCase","fetchPixabayImages","currentPage","fetch","then","response","ok","json","Promise","reject","Error","Item","li","Img","img","ImageGalleryItem","image","onImageClick","src","webformatURL","alt","tags","onClick","largeImageURL","List","ul","ImageGallery","images","map","id","Overlay","ModalStyled","modalRoot","document","querySelector","console","log","Modal","onClose","useEffect","window","addEventListener","handleKeyDown","removeEventListener","code","createPortal","target","defaultProps","LoaderStyled","Loader","height","width","ButtonStyled","ButtonContainer","props","ErrorMessage","message","toastId","propTypes","PropTypes","string","Status","App","setCurrentPage","setImages","setError","showModal","setShowModal","largeImage","setLargeImage","status","setStatus","getImages","a","data","hits","length","info","prevState","scrollOnLoadButton","scrollTo","top","documentElement","scrollHeight","behavior","fullImageUrl","className","ReactDOM","render","StrictMode","getElementById"],"mappings":"iTAGaA,EAAgBC,IAAOC,IAAV,sI,OCGXC,EAFG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAAkB,cAACJ,EAAD,UAAgBI,K,OCFvCC,EAASJ,IAAOK,OAAV,mcAkBNC,EAAON,IAAOO,KAAV,oLAWJC,EAASR,IAAOS,OAAV,krBAqCNC,EAAcV,IAAOW,KAAV,qNAaXC,EAAQZ,IAAOa,MAAV,+O,uBCDHC,EArEG,SAAC,GAAe,IAAdC,EAAa,EAAbA,SAGpB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAoBC,EAApB,KA6BE,OACE,cAACd,EAAD,UACE,eAACE,EAAD,CAAMS,SAzBW,SAACI,GACpBA,EAAMC,iBAEqB,KAAvBH,EAAYI,QAahBN,EAASE,GACTC,EAAe,KAbXI,IAAMC,MAAM,mFAAmB,CAC/BC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,KAcZ,UACE,eAACvB,EAAD,CAAQwB,KAAK,SAAb,UACE,cAAC,IAAYC,SAAb,CAAsBC,MAAO,CAAEC,MAAO,SAAUC,KAAM,OAAtD,SACE,8BACE,cAAC,IAAD,QAMJ,cAAC1B,EAAD,wBAGF,cAACE,EAAD,CACEoB,KAAK,OACLK,aAAa,MACbC,WAAS,EACTC,YAAY,2BACZC,KAAK,cACLN,MAAOjB,EACPwB,SAjDiB,SAACtB,GAC1BD,EAAgBC,EAAMuB,cAAcR,MAAMS,wBCH7BC,I,UAAAA,EAXf,SAA4B3B,EAAa4B,GACvC,OAAOC,MAAM,GAAD,OAHG,2BAGH,cACO7B,EADP,iBAC2B4B,EAD3B,gBAJE,qCAIF,yDAEVE,MAAK,SAAAC,GACL,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAJ,oLCRbC,EAAOtD,IAAOuD,GAAV,yLASJC,EAAMxD,IAAOyD,IAAV,2SCgBDC,EAxBU,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,aAGjC,OACE,cAACN,EAAD,UACE,cAACE,EAAD,CACEK,IAAKF,EAAMG,aACXC,IAAKJ,EAAMK,KACXC,QAPY,kBAAML,EAAaD,EAAMO,qBCDhCC,EAAOnE,IAAOoE,GAAV,qTCwBFC,EAvBM,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQV,EAAX,EAAWA,aAAX,OACnB,cAACO,EAAD,UACGG,EAAOC,KAAI,SAAAZ,GACL,OACH,cAAC,EAAD,CAEEA,MAAOA,EACPC,aAAcA,GAFTD,EAAMa,UCPRC,EAASzE,IAAOC,IAAT,uNAaPyE,EAAa1E,IAAOC,IAAT,+FCTlB0E,EAAYC,SAASC,cAAc,eACzCC,QAAQC,IAAIJ,GAEZ,IAAMK,EAAQ,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,QAAS9E,EAAa,EAAbA,SAGvB+E,qBAAU,WAKR,OAHAC,OAAOC,iBAAiB,UAAWC,GAG5B,WAELF,OAAOG,oBAAoB,UAAWD,OAO1C,IAAOA,EAAgB,SAAAlE,GACF,WAAfA,EAAMoE,MAGPN,KAWL,OACKO,uBACK,cAACf,EAAD,CAASR,QARQ,SAAA9C,GAEfA,EAAMuB,gBAAkBvB,EAAMsE,QAC5BR,KAKJ,SACA,cAACP,EAAD,UAAcvE,MAEhBwE,IAOVK,EAAMU,aAAe,CACfvF,SAAU,MAQD6E,I,MAAAA,I,iBC3DFW,EAAc3F,IAAOC,IAAT,sECUV2F,GARA,WACb,OACE,cAACD,EAAD,UACE,cAAC,IAAD,CAAU3D,KAAK,WAAWG,MAAM,UAAU0D,OAAQ,IAAKC,MAAO,SCNvDC,GAAe/F,IAAOS,OAAV,oqBA+BZuF,GAAkBhG,IAAOC,IAAV,8FCTbO,OArBf,SAAiByF,GACf,OACE,cAACD,GAAD,UAEJ,cAACD,GAAD,CACI9B,QAASgC,EAAMhC,QADnB,0B,mBCDA,SAASiC,GAAT,GAAoC,IAAZC,EAAW,EAAXA,QAEtB,OAAO7E,IAAMC,MAAN,UAAe4E,GAAW,CAC/B3E,SAAU,aACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVqE,QATe,kBAkBnBF,GAAaG,UAAY,CACvBF,QAASG,KAAUC,QAGNL,UChBTM,GACE,OADFA,GAEK,UAFLA,GAGM,WAHNA,GAIM,WAqGGC,GAlGH,WACV,MAAsCzF,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAsCF,mBAAS,KAA/C,mBAAO6B,EAAP,KAAoB6D,EAApB,KACA,EAA4B1F,mBAAS,IAArC,mBAAOsD,EAAP,KAAeqC,EAAf,KACA,EAA0B3F,mBAAS,MAAnC,mBAAOO,EAAP,KAAcqF,EAAd,KACA,EAAkC5F,oBAAS,GAA3C,mBAAO6F,EAAP,KAAkBC,EAAlB,KACA,EAAoC9F,mBAAS,IAA7C,mBAAO+F,EAAP,KAAmBC,EAAnB,KACA,EAA4BhG,mBAASwF,IAArC,mBAAOS,EAAP,KAAeC,EAAf,KACApC,QAAQC,IAAIlC,GACZiC,QAAQC,IAAI9D,GAGZiE,qBAAU,WACR,GAAKjE,EAAL,CAEA,IAAMkG,EAAS,uCAAG,4BAAAC,EAAA,6DAChBF,EAAUV,IACV1B,QAAQC,IAAI9D,GAFI,kBAIK2B,EAAmB3B,EAAa4B,GAAaE,MAC9D,SAAAsE,GAAI,OAAIA,EAAKC,QALD,OAQM,KAJdA,EAJQ,QAQLC,QACPjG,IAAMkG,KAAK,oIAGbb,GAAU,SAAAc,GAAS,4BAAQA,GAAR,YAAsBH,OAEzCJ,EAAUV,IAEU,IAAhB3D,GACF6E,IAjBY,kDAoBdd,EAAS,EAAD,IACRM,EAAUV,IArBI,yBAuBdU,EAAUV,IAvBI,6EAAH,qDA0BfW,OACC,CAAClG,EAAa4B,IAGjB,IAaM6E,EAAqB,WACzBvC,OAAOwC,SAAS,CACdC,IAAKhD,SAASiD,gBAAgBC,aAC9BC,SAAU,YAiBd,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAWhH,SAnCQ,SAAAE,GACrBC,EAAeD,GACf0F,EAAU,IACVD,EAAe,GACfE,EAAS,SAgCP,cAAC,EAAD,CAActC,OAAQA,EAAQV,aARR,SAAAoE,GACxBhB,EAAcgB,GACdlB,GAAa,MAOC,YAAXG,GAAwB3C,EAAOiD,QAAU,IACxC,cAAC,GAAD,CAAQtD,QA9BS,WACrByC,GAAe,SAAAe,GAAS,OAAIA,EAAY,QAgCrCZ,GACC,cAAC,EAAD,CAAO5B,QApBO,WAClB6B,GAAa,SAAAD,GAAS,OAAKA,KAC3BG,EAAc,KAkBV,SACE,qBAAKnD,IAAKkD,EAAYhD,IAAI,GAAGkE,UAAU,kBAG/B,YAAXhB,GAAwB,cAAC,GAAD,IACb,aAAXA,GAAyB,cAAC,GAAD,CAAcd,QAAS5E,EAAM4E,UACvD,cAAC,IAAD,CAAgB1E,UAAW,UC1GjCyG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFxD,SAASyD,eAAe,W","file":"static/js/main.5da29590.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\n\r\nexport const MainContainer = styled.div`\r\nmax-width: 1440px;\r\nmargin-left: auto;\r\nmargin-right: auto;\r\npadding-left: 15px;\r\npadding-right: 15px;\r\n\r\n`; ","\r\nimport {MainContainer} from './Container.styled'\r\n\r\n\r\nconst Container = ({ children }) => <MainContainer>{children}</MainContainer>;\r\n\r\nexport default Container;","import styled from \"@emotion/styled\";\r\n\r\nexport const Header = styled.header`\r\ntop: 0;\r\n  left: 0;\r\n  position: sticky;\r\n  z-index: 1100;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 64px;\r\n  padding-right: 24px;\r\n  padding-left: 24px;\r\n  padding-top: 12px;\r\n  padding-bottom: 12px;\r\n  color: #fff;\r\n  background-color: #3f51b5;\r\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\r\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\r\n`;\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  max-width: 600px;\r\n  background-color: #fff;\r\n  border-radius: 3px;\r\n  overflow: hidden;\r\n\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  display: inline-block;\r\n  width: 48px;\r\n  height: 48px;\r\n  border: 0;\r\n  display: inline-block;\r\n\r\n  min-width: 180px;\r\n  padding: 8px 16px;\r\n  border-radius: 2px;\r\n  border: 0;\r\n  \r\n  background-color: tomato;\r\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\r\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\r\n\r\n  text-align: center;\r\n  text-decoration: none;\r\n  font-family: inherit;\r\n  font-size: 18px;\r\n  line-height: 24px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n\r\n  opacity: 1;\r\n\r\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  cursor: pointer;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    opacity: 0.8;\r\n  }\r\n\r\n\r\n`;\r\nexport const ButtonLabel = styled.span`\r\n  position: absolute;\r\n  width: 1px;\r\n  height: 1px;\r\n  padding: 0;\r\n  overflow: hidden;\r\n  clip: rect(0, 0, 0, 0);\r\n  white-space: nowrap;\r\n  clip-path: inset(50%);\r\n  border: 0;\r\n\r\n\r\n`;\r\nexport const Input = styled.input`\r\ndisplay: inline-block;\r\nwidth: 100%;\r\nfont: inherit;\r\nfont-size: 20px;\r\nborder: none;\r\noutline: none;\r\npadding-left: 4px;\r\npadding-right: 4px;\r\n&::placeholder {\r\n    font: inherit;\r\n    font-size: 18px;\r\n  }\r\n\r\n`;","import {  useState } from 'react';\r\nimport { Header, Form, Button, ButtonLabel, Input } from './Searchbar.styled'\r\nimport PropTypes from \"prop-types\";\r\nimport { toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { MdFindReplace } from \"react-icons/md\";\r\nimport { IconContext } from \"react-icons\";\r\n\r\n\r\n\r\n\r\nconst Searchbar = ({onSubmit}) =>{\r\n\r\n\r\nconst [searchQuery, setSearchQuery]=useState(''); \r\n\r\nconst handleSubmitChange = (event) => {\r\n  setSearchQuery( event.currentTarget.value.toLowerCase())\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (searchQuery.trim() === \"\") {\r\n        toast.error('Введите Запрос.', {\r\n        position: \"top-right\",\r\n        autoClose: 2000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      return;\r\n    }\r\n\r\n    onSubmit(searchQuery);\r\n    setSearchQuery('');\r\n\r\n    \r\n\r\n  };\r\n\r\n  return (\r\n    <Header >\r\n      <Form onSubmit={handleSubmit} >\r\n        <Button type=\"submit\"  >\r\n          <IconContext.Provider value={{ color: \"ffffff\", size: \"2em\" }}>\r\n            <div>\r\n              <MdFindReplace />\r\n            </div>\r\n          </IconContext.Provider>\r\n\r\n\r\n\r\n          <ButtonLabel>Search</ButtonLabel>\r\n        </Button>\r\n\r\n        <Input\r\n          type=\"text\"\r\n          autocomplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          name=\"searchQuery\"\r\n          value={searchQuery}\r\n          onChange={handleSubmitChange}\r\n\r\n        />\r\n      </Form>\r\n    </Header>\r\n  )\r\n\r\n\r\n}\r\n\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Searchbar;","const API_KEY = '23744407-6e41977eb223c860dbad454a0';\r\nconst BASE_URL = 'https://pixabay.com/api/';\r\n\r\nfunction fetchPixabayImages(searchQuery, currentPage) {\r\n  return fetch(\r\n    `${BASE_URL}?q=${searchQuery}&page=${currentPage}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`,\r\n  ).then(response => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n    return Promise.reject(new Error(`Ошибка запроса попробуйте позже`));\r\n  });\r\n}\r\n\r\nexport default fetchPixabayImages;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Item = styled.li`\r\nborder-radius: 2px;\r\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\r\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\r\n}\r\n\r\n`;\r\n\r\n\r\nexport const Img = styled.img`\r\nwidth: 100%;\r\nheight: 260px;\r\nobject-fit: cover;\r\ntransition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\nopacity: 1;\r\n\r\n&:hover,\r\n&:focus {\r\n  opacity: 0.9;\r\n  transform: scale(1.02);\r\n  cursor: zoom-in;\r\n\r\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n}\r\n`;","import PropTypes from 'prop-types';\r\nimport {Item, Img } from './ImageGalleryItem.styled'\r\n\r\nconst ImageGalleryItem = ({ image, onImageClick }) => {\r\n  const fullImage = () => onImageClick(image.largeImageURL);\r\n\r\n  return (\r\n    <Item>\r\n      <Img\r\n        src={image.webformatURL}\r\n        alt={image.tags}\r\n        onClick={fullImage}\r\n      />\r\n    </Item>\r\n  );\r\n};\r\n\r\n\r\nImageGalleryItem.propTypes = {\r\n    image: PropTypes.shape({\r\n    webformatURL: PropTypes.string.isRequired,\r\n    largeImageURL: PropTypes.string.isRequired,\r\n    tags: PropTypes.string,\r\n  }),\r\n  onImageClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;","import styled from \"@emotion/styled\";\r\n\r\n\r\nexport const List = styled.ul`\r\n    display: grid;\r\n    max-width: calc(100vw - 48px);\r\n    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\r\n    grid-gap: 16px;\r\n    margin-top: 0;\r\n    margin-bottom: 12px;\r\n    padding: 0;\r\n    list-style: none;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n\r\n`;\r\n\r\n","import PropTypes from 'prop-types';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport {List } from './ImageGalery.styled'\r\n\r\nconst ImageGallery = ({ images, onImageClick }) => (\r\n  <List >\r\n    {images.map(image => {\r\n           return (\r\n        <ImageGalleryItem\r\n          key={image.id}\r\n          image={image}\r\n          onImageClick={onImageClick}\r\n        />\r\n      );\r\n    })}\r\n  </List>\r\n);\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n    }),\r\n  ),\r\n  onImageClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery;","\r\nimport styled from '@emotion/styled';\r\nexport const Overlay =styled.div`\r\nposition: fixed;\r\ntop: 0;\r\nleft: 0;\r\nwidth: 100vw;\r\nheight: 100vh;\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: center;\r\nbackground-color: rgba(0, 0, 0, 0.8);\r\nz-index: 1200;\r\n`;\r\n\r\nexport const ModalStyled =styled.div`\r\nmax-width: calc(100vw - 48px);\r\nmax-height: calc(100vh - 24px);\r\n\r\n`;\r\n\r\n\r\n","import { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {Overlay, ModalStyled } from './Modal.styled'\r\nimport { useEffect } from 'react';\r\n\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\nconsole.log(modalRoot);\r\n\r\nconst Modal = ({onClose, children })=>{\r\n\r\n\r\n  useEffect(() => {\r\n    // console.log('add');\r\n    window.addEventListener('keydown', handleKeyDown);\r\n\r\n    // Убирает слушатети (unmount)\r\n    return () => {\r\n      // console.log('delate')\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  });\r\n\r\n\r\n\r\n\r\n  const  handleKeyDown = event =>{\r\n    if (event.code === 'Escape'){\r\n       // console.log('Нажали ESC, нужно закрыть модалку');\r\n    \r\n       onClose();\r\n    }\r\n  }\r\n\r\n\r\n  const handleBackdropClick =event =>{\r\n           // console.log('Кликнули в бекдроп');\r\n           if(event.currentTarget === event.target) {\r\n                onClose();\r\n            }\r\n          }\r\n  return(\r\n       createPortal (\r\n            <Overlay onClick={handleBackdropClick}>\r\n            <ModalStyled>{children}</ModalStyled>\r\n          </Overlay>,\r\n          modalRoot,\r\n            )\r\n  );\r\n}\r\n\r\n\r\n\r\nModal.defaultProps = {\r\n      children: null,\r\n     };\r\n    \r\n     Modal.propTypes = {\r\n       children: PropTypes.node,\r\n       onClose: PropTypes.func.isRequired,\r\n     };\r\n\r\nexport default Modal;","import styled from \"@emotion/styled\";\r\n\r\n\r\nexport const LoaderStyled =styled.div`\r\ndisplay: grid;\r\nplace-content: center;\r\n\r\n`;","import Template from 'react-loader-spinner';\r\nimport {LoaderStyled} from './Loader.styled'\r\n\r\n\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <LoaderStyled>\r\n      <Template type=\"TailSpin\" color=\"#02be6e\" height={100} width={100} />\r\n    </LoaderStyled>\r\n  );\r\n}\r\n\r\nexport default Loader;","import styled from \"@emotion/styled\";\r\n\r\nexport const ButtonStyled = styled.button`\r\n\r\nmargin: 0 auto;\r\n  margin-top: 20px;\r\n  width: 100px;\r\n  padding: 8px 16px;\r\n  border-radius: 2px;\r\n  background-color: #3f51b5;\r\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  text-align: center;\r\n  display: inline-block;\r\n  color: #fff;\r\n  border: 0;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  font-family: inherit;\r\n  font-size: 18px;\r\n  line-height: 24px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  min-width: 180px;\r\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\r\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\r\n\r\n    &:hover,\r\n    :focus {\r\n      background-color: #303f9f;\r\n    }\r\n\r\n`;\r\n\r\nexport const ButtonContainer = styled.div`\r\ndisplay: flex;\r\njustify-content: center;\r\n\r\nmargin-bottom: 12px;\r\n`;\r\n\r\n","import propTypes from \"prop-types\";\r\nimport {ButtonStyled, ButtonContainer} from './Button.styled'\r\n\r\nfunction Button (props) {\r\n  return (\r\n    <ButtonContainer>\r\n\r\n<ButtonStyled \r\n    onClick={props.onClick}>\r\n      load more\r\n    </ButtonStyled>\r\n    </ButtonContainer>\r\n   \r\n  );\r\n}\r\n\r\n\r\n\r\n\r\nButton.propTypes = {\r\n  onClick: propTypes.func.isRequired,\r\n};\r\n\r\n\r\nexport default Button;","import PropTypes from 'prop-types';\r\n// import { Message } from './ErrorMassage.styled';\r\nimport { toast } from 'react-toastify';\r\n\r\n// В контейнере рендерится custom-id-yes ??????\r\n\r\nfunction ErrorMessage({ message }) {\r\n  const customId = 'custom-id-yes';\r\n  return toast.error(`${message}`, {\r\n    position: 'top-center',\r\n    autoClose: 3000,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n    toastId: customId,\r\n  });\r\n\r\n  // <Message role=\"alert\">\r\n  //   <p>{message}</p>\r\n\r\n  // </Message>\r\n}\r\n\r\nErrorMessage.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import { useEffect, useState } from 'react';\r\nimport Container from './component/Container/Container';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport Searchbar from './component/Searchbar/Searchbar';\r\nimport fetchPixabayImages from './api/pixabay-api.jsx';\r\nimport ImageGallery from './component/ImageGallery/ImageGalery';\r\nimport Modal from './component/Modal/Modal';\r\nimport Loader from './component/Loader/Loader';\r\nimport Button from './component/Button/Button';\r\nimport ErrorMessage from './component/ErrorMessage/ErrorMasage';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst Status = {\r\n  IDLE: 'idle',\r\n  PENDING: 'pending',\r\n  RESOLVED: 'resolved',\r\n  REJECTED: 'rejected',\r\n};\r\n\r\nconst App = () => {\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [currentPage, setCurrentPage] = useState('1');\r\n  const [images, setImages] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [largeImage, setLargeImage] = useState('');\r\n  const [status, setStatus] = useState(Status.IDLE);\r\n  console.log(currentPage);\r\n  console.log(searchQuery);\r\n\r\n  // Запрос за картинками при обновлении инпута\r\n  useEffect(() => {\r\n    if (!searchQuery) return;\r\n\r\n    const getImages = async () => {\r\n      setStatus(Status.PENDING);\r\n      console.log(searchQuery);\r\n      try {\r\n        const hits = await fetchPixabayImages(searchQuery, currentPage).then(\r\n          data => data.hits,\r\n        );\r\n\r\n        if (hits.length === 0) {\r\n          toast.info('Введите валидний запрос');\r\n        }\r\n\r\n        setImages(prevState => [...prevState, ...hits]);\r\n\r\n        setStatus(Status.RESOLVED);\r\n\r\n        if (currentPage !== 1) {\r\n          scrollOnLoadButton();\r\n        }\r\n      } catch (error) {\r\n        setError(error);\r\n        setStatus(Status.REJECTED);\r\n      } finally {\r\n        setStatus(Status.IDLE);\r\n      }\r\n    };\r\n    getImages();\r\n  }, [searchQuery, currentPage]);\r\n\r\n  // Принимаем с формы запрос и пишем в стейт + сбрасываем после отправки значения из стейта\r\n  const handleOnSubmit = searchQuery => {\r\n    setSearchQuery(searchQuery);\r\n    setImages([]);\r\n    setCurrentPage(1);\r\n    setError(null);\r\n  };\r\n\r\n  // при клике на кнопку Load More увеличиваем страницу.\r\n  const handleLoadMore = () => {\r\n    setCurrentPage(prevState => prevState + 1);\r\n  };\r\n\r\n  //  Скролл при клике на кнопку\r\n  const scrollOnLoadButton = () => {\r\n    window.scrollTo({\r\n      top: document.documentElement.scrollHeight,\r\n      behavior: 'smooth',\r\n    });\r\n  };\r\n\r\n  // Получаем дату из фетча\r\n\r\n  const toggleModal = () => {\r\n    setShowModal(showModal => !showModal);\r\n    setLargeImage('');\r\n  };\r\n\r\n  // Получает полное изображение, пишет его в стейт и открывает модалку\r\n  const handleGalleryItem = fullImageUrl => {\r\n    setLargeImage(fullImageUrl);\r\n    setShowModal(true);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Searchbar onSubmit={handleOnSubmit} />\r\n      <ImageGallery images={images} onImageClick={handleGalleryItem} />\r\n      {status !== 'pending' && images.length >= 12 && (\r\n        <Button onClick={handleLoadMore} />\r\n      )}\r\n\r\n      {showModal && (\r\n        <Modal onClose={toggleModal}>\r\n          <img src={largeImage} alt=\"\" className=\"Modal-image\" />\r\n        </Modal>\r\n      )}\r\n      {status === 'pending' && <Loader />}\r\n      {status === 'rejected' && <ErrorMessage message={error.message} />}\r\n      <ToastContainer autoClose={3000} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n\r\n"],"sourceRoot":""}